_require local "../../../../basis.smi"
_require "../../../data/types/main/Types.ppg.smi"
_require local "../../userlevelprimitive/main/UserLevelPrimitive.smi"
_require local "../../../data/builtin/main/BuiltinTypes.smi"
_require local "../../../data/symbols/main/RecordLabel.smi"

structure ReifiedTyData =
struct
  type ty = Types.ty

  val Int32Ty : ty
  val Int64Ty : ty
  val IntInfTy : ty
  val Word32Ty : ty
  val Word64Ty : ty
  val Word8Ty : ty
  val CharTy : ty
  val StringTy : ty
  val Real64Ty : ty
  val Real32Ty : ty
  val UnitTy : ty
  val PtrTy : ty
  val CodeptrTy : ty
  val ExnTy : ty
  val BoolTy : ty
  val BoxedTy : ty
  val RefTy : ty -> ty
  val ListTy : ty -> ty
  val ArrayTy : ty -> ty
  val VectorTy : ty -> ty
  val OptionTy : ty -> ty
  val RecordTy : (string * ty) list -> ty
  val TupleTy :  ty list -> ty

  val BtvIdTy : unit -> ty
  val TypIdTy : unit -> ty
(*
  val LongsymbolTy : unit -> ty
  val PosTy : unit -> ty
*)
  val ConSetTy : unit -> ty
  val ConSetEnvTy : unit -> ty
  val TyRepTy : unit -> ty
  val LabelTy : unit -> ty
  val ReifiedTyLabelMapTy : unit -> ty
  val ReifiedTyTy : unit -> ty
  val IdstatusTy : unit -> ty
  val EnvTy : unit -> ty

  val SENVMAPTY : ty -> ty
  val TypIDMapMapTy : ty -> ty
  val BounTypeVarIDMapMapTy : ty -> ty
  val RecordLabelMapMapTy : ty -> ty

end

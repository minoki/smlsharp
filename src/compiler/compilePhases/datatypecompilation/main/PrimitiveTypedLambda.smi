_require local "../../../../basis.smi"
(* _require "../../../data/symbols/main/Symbol.smi" *)
_require local "../../../data/symbols/main/RecordLabel.smi"
_require local "../../../extensions/debug/main/Bug.smi"
_require local "../../../libs/ids/main/LocalID.smi"

_require "../../../compilerIRs/typedlambda/main/TypedLambda.ppg.smi"
_require "../../../data/types/main/Types.ppg.smi"
_require local "../../../data/types/main/TypesBasics.smi"
_require "../../../data/builtin/main/BuiltinPrimitive.ppg.smi"
_require local "../../../data/builtin/main/BuiltinTypes.smi"
_require "./EmitTypedLambda.smi"

structure PrimitiveTypedLambda =
struct

  val toPrimTy : Types.ty -> TypedLambda.primTy

  val compile
      : {primitive : BuiltinPrimitive.primitive,
         primTy : TypedLambda.primTy,
         instTyList : Types.ty list,
         argExpList : EmitTypedLambda.exp list,
         resultTy : Types.ty,
         loc : TypedLambda.loc}
        -> EmitTypedLambda.exp

end
